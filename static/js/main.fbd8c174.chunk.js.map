{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","Api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","style","backgroundColor","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","gutterBottom","variant","start","end","value","duration","separator","color","Date","toDateString","url","fetchData","country","a","changableurl","axios","get","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountires","setFetchedCountires","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbd8c174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2xThm\",\"card\":\"Cards_card__1xYGo\",\"infected\":\"Cards_infected__2wddu\",\"recovered\":\"Cards_recovered__xsXzL\",\"deaths\":\"Cards_deaths__2Zn4I\"};","import React from 'react'\r\nimport {Card , CardComponent, Grid, Typography, CardContent} from '@material-ui/core'\r\nimport Countup from 'react-countup'\r\nimport styles from './Cards.module.css'\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({data: { confirmed , recovered , deaths, lastUpdate}}) => {\r\n    console.log(confirmed);\r\n    console.log(recovered);\r\n    console.log(deaths);\r\n    console.log(lastUpdate);\r\n\r\n  if(!confirmed){\r\n      return  \" loading...\" ;\r\n  }\r\n console.log(lastUpdate)\r\n    return (\r\n        <div className={styles.container}>\r\n          <Grid container spacing={3} justify={\"center\"}>\r\n           <Grid style={{backgroundColor: 'rgba(208,208,241,0.5)'}} item component = {Card} xs={12} md={3} className={cx (styles.card, styles.infected )}>\r\n           <CardContent>\r\n               <Typography  gutterBottom>Infected </Typography>\r\n               <Typography variant={\"h5\"}>\r\n                   <Countup \r\n                      start={0}\r\n                      end={confirmed.value}\r\n                      duration={2.5}\r\n                      separator=\",\"\r\n                   />\r\n                </Typography>\r\n               <Typography color={\"textSecondary\"}> {new Date(lastUpdate).toDateString()} </Typography>\r\n               <Typography variant={\"body2\"}>Number Of active cases of COVID-19</Typography>\r\n           </CardContent>\r\n           </Grid>\r\n           <Grid style={{backgroundColor: 'rgba(188,253,188,0.5)'}} item component = {Card} xs={12} md={3} className={cx (styles.card , styles.recovered )}>\r\n           <CardContent>\r\n               <Typography  gutterBottom>Recovered </Typography>\r\n               <Typography variant={\"h5\"}>\r\n               <Countup \r\n                      start={0}\r\n                      end={recovered.value}\r\n                      duration={2.5}\r\n                      separator=\",\"\r\n                 />\r\n               </Typography>\r\n               <Typography color={\"textSecondary\"}> {new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant={\"body2\"}>Number Of Recovered cases from COVID-19</Typography>\r\n           </CardContent>\r\n           </Grid>\r\n           <Grid style={{backgroundColor: 'rgba(245,192,192,0.5)'}} item component = {Card} xs={12} md={3} className={cx (styles.card, styles.deaths )}>\r\n            <CardContent>\r\n               <Typography  gutterBottom>Deaths </Typography>\r\n               <Typography variant={\"h5\"}> \r\n               <Countup \r\n                      start={0}\r\n                      end={deaths.value}\r\n                      duration={2.5}\r\n                      separator=\",\"\r\n                   />\r\n                </Typography>\r\n               <Typography color={\"textSecondary\"}> {new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant={\"body2\"}>Number Of Deaths caused by COVID-19</Typography>\r\n           </CardContent>\r\n           </Grid>\r\n          </Grid>  \r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios'\r\n\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {  \r\n  let changableurl = url;  \r\n  if(country){  \r\n      changableurl = `${url}/countries/${country}`  \r\n  }  \r\n  try {  \r\n      const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changableurl);  \r\n      return {confirmed, recovered, deaths, lastUpdate};  \r\n  }  \r\n  catch(error){  \r\n      console.log(error);  \r\n  }  \r\n};  \r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    \r\n    const ModifiedData = data.map((dailyData)=> ({\r\n      confirmed : dailyData.confirmed.total ,\r\n      deaths : dailyData.deaths.total ,\r\n      date : dailyData.reportDate,\r\n    }));\r\n\r\n   \r\n\r\n  } catch (error) {\r\n    return error \r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () =>{  \r\n  try{  \r\n  const {data:{countries}} = await axios.get(`${url}/countries`);  \r\n  return countries.map((country)=> country.name);  \r\n  }     \r\n  catch(error){  \r\n      return error  \r\n  }  \r\n};","import React, {useState, useEffect} from 'react';  \r\nimport {NativeSelect, FormControl} from '@material-ui/core';  \r\nimport styles from './CountryPicker.module.css';  \r\nimport {fetchCountries} from '../../Api';  \r\nconst CountryPicker = ({handleCountryChange}) => {  \r\nconst [fetchedCountires, setFetchedCountires] = useState([]);  \r\n  \r\nuseEffect(()=>{  \r\n    const fetchAPI = async () =>{  \r\n        setFetchedCountires(await fetchCountries());  \r\n    }  \r\n    fetchAPI();  \r\n}, [setFetchedCountires])  \r\nconsole.log(fetchedCountires);  \r\n    return (  \r\n        <FormControl  className={styles.formControl}>      \r\n        <NativeSelect defaultValue=\"\" onChange ={(e) => handleCountryChange(e.target.value)}  variant=\"filled\">  \r\n            <option value=\"\">Global</option>  \r\n    {fetchedCountires.map((country,i) => <option key={i} value={country}>{country}</option>)}  \r\n        </NativeSelect>  \r\n        </FormControl >  \r\n    )  \r\n}  \r\nexport default CountryPicker; \r\n","import React from 'react'\r\n\r\nimport {Cards , Charts, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './Api'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {         \r\n    data: {},  \r\n    country: '',  \r\n    }  \r\n    async componentDidMount(){  \r\n        const data = await fetchData();  \r\n        // console.log(fetchedData);  \r\n        this.setState({data});  \r\n    }  \r\n  \r\n     handleCountryChange = async (country) => {          \r\n        const data = await fetchData(country);  \r\n        this.setState({data: data, country: country});  \r\n     }  \r\n  \r\n    render(){  \r\n        const {data, country } = this.state;  \r\n        return(  \r\n        <div  className={styles.container} >  \r\n            {/* <img className={styles.image} src={coronaImage} alt=\"Covid-19\"/>   */}\r\n            <Cards data={data}/>  \r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>  \r\n            {/* <Charts data={data} country={country}/>   */}\r\n        </div>  \r\n    )  \r\n  }\r\n}\r\n\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render( <App /> ,document.getElementById(\"root\"))\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2EWrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2W5u8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__AnDfV\"};"],"sourceRoot":""}